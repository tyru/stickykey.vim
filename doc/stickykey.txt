*stickykey.txt*		You don't need press very far away meta keys

Version: 0.0.1a
Author : tyru <tyru.exe@gmail.com>
License:
NEW BSD LICENSE {{{
  Copyright (c) 2010, tyru
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

      * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      * Neither the name of the tyru nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}}}


==============================================================================
CONTENS						*stickykey-contents*

Introduction		|stickykey-introduction|
Interface			|stickykey-interface|
  Keymappings		|stickykey-mappings|
  Variables			|stickykey-variables|
Changelog			|stickykey-changelog|


==============================================================================
INTRODUCTION					*stickykey-introduction* {{{

This plugin provides Sticky Key to you.
With Sticky Key, you can emulate <C-o> by ";o".
(In this case, <Plug>(stickykey-ctrl) is mapped to ";")

And I suppose you are using GNU screen :)
Inputting screen's hotkey is a little complicated.
But you can send key input to screen fastly, certainly, and easily.

In this document:
- I use "sticky key" for the key emulating sequential input.
- I use "stickykey" for this plugin.

}}}
==============================================================================
INTERFACE					*stickykey-interface* {{{
------------------------------------------------------------------------------
MAPPINGS							*stickykey-mappings* {{{

<Plug>(stickykey-...-remap) works like recursive mapping.


<Plug>(stickykey-ctrl)
<Plug>(stickykey-ctrl-remap)
	Sticky key for |ctrl|.

<Plug>(stickykey-alt)
<Plug>(stickykey-alt-remap)
	Sticky key for |alt|.

<Plug>(stickykey-shift)
<Plug>(stickykey-shift-remap)
	Sticky key for |shift|.

<Plug>(stickykey-command)
<Plug>(stickykey-command-remap)
	Sticky key for Macintosh command key. (see |<D-|)

}}}
------------------------------------------------------------------------------
VARIABLES						*stickykey-variables* {{{

g:stickykey_when_no_escaped_key			string (default: "thru")
	This variables determines when stickykey can not find
	escaped input with meta key.
	For e.g., while waiting the next key after pressing
	"<Plug>(stickykey-ctrl)", <C-o> is input.
	This variable can be any one of those:
		"nop":
			Behave like no key is input.
		"thru":
			Execute key without escaping with meta key.
		"again":
			Dispose current key input, wait next input again.
		"input" (Experimental):
			If input key is pressed with any modifier keys,
			return the input directly.
			for example, stickeykey was
			invoked by <Plug>(stickykey-shift),
			and input is <C-a>, return <C-a>.
		"mapping" (Experimental):
			If input key is pressed with any modifier keys,
			see invoked <Plug> key.
			for example, stickeykey was
			invoked by <Plug>(stickykey-shift),
			and input is <C-a>, return <S-a>.

}}}
}}}
==============================================================================
Changelog					*stickykey-changelog* {{{

0.0.0:
- Initial upload
0.0.1:
- refactoring
- add experimental options to g:stickykey_when_no_escaped_key ("input", "mapping")
0.0.1a:
- fix error: j is undefined value

}}}
==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl:noet:fdm=marker:fen
